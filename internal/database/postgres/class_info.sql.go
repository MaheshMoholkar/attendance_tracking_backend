// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: class_info.sql

package postgres

import (
	"context"
)

const createClassInfo = `-- name: CreateClassInfo :one
INSERT INTO class_info (className) 
VALUES ($1) 
RETURNING class_id, classname
`

func (q *Queries) CreateClassInfo(ctx context.Context, classname string) (ClassInfo, error) {
	row := q.db.QueryRowContext(ctx, createClassInfo, classname)
	var i ClassInfo
	err := row.Scan(&i.ClassID, &i.Classname)
	return i, err
}

const deleteClassInfo = `-- name: DeleteClassInfo :exec
DELETE FROM class_info 
WHERE class_id = $1
`

func (q *Queries) DeleteClassInfo(ctx context.Context, classID int32) error {
	_, err := q.db.ExecContext(ctx, deleteClassInfo, classID)
	return err
}

const getClasses = `-- name: GetClasses :many
SELECT class_id, classname 
FROM class_info
`

func (q *Queries) GetClasses(ctx context.Context) ([]ClassInfo, error) {
	rows, err := q.db.QueryContext(ctx, getClasses)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ClassInfo
	for rows.Next() {
		var i ClassInfo
		if err := rows.Scan(&i.ClassID, &i.Classname); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const updateClassInfo = `-- name: UpdateClassInfo :one
UPDATE class_info 
SET className = $1 
WHERE class_id = $2 
RETURNING class_id, classname
`

type UpdateClassInfoParams struct {
	Classname string
	ClassID   int32
}

func (q *Queries) UpdateClassInfo(ctx context.Context, arg UpdateClassInfoParams) (ClassInfo, error) {
	row := q.db.QueryRowContext(ctx, updateClassInfo, arg.Classname, arg.ClassID)
	var i ClassInfo
	err := row.Scan(&i.ClassID, &i.Classname)
	return i, err
}
