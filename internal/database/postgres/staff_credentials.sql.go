// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: staff_credentials.sql

package postgres

import (
	"context"
)

const createStaffCredentials = `-- name: CreateStaffCredentials :one
INSERT INTO staff_credentials(
    staff_id,
    password_hash
)
VALUES ($1, $2)
RETURNING staff_id
`

type CreateStaffCredentialsParams struct {
	StaffID      int32
	PasswordHash string
}

func (q *Queries) CreateStaffCredentials(ctx context.Context, arg CreateStaffCredentialsParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, createStaffCredentials, arg.StaffID, arg.PasswordHash)
	var staff_id int32
	err := row.Scan(&staff_id)
	return staff_id, err
}

const getStaffCredentials = `-- name: GetStaffCredentials :one
SELECT password_hash 
FROM staff_credentials
WHERE staff_id = $1
`

func (q *Queries) GetStaffCredentials(ctx context.Context, staffID int32) (string, error) {
	row := q.db.QueryRowContext(ctx, getStaffCredentials, staffID)
	var password_hash string
	err := row.Scan(&password_hash)
	return password_hash, err
}

const updateStaffCredentials = `-- name: UpdateStaffCredentials :one
UPDATE staff_credentials
SET 
    staff_id = $2,
    password_hash = $3
WHERE staff_id = $1
RETURNING staff_id
`

type UpdateStaffCredentialsParams struct {
	StaffID      int32
	StaffID_2    int32
	PasswordHash string
}

func (q *Queries) UpdateStaffCredentials(ctx context.Context, arg UpdateStaffCredentialsParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, updateStaffCredentials, arg.StaffID, arg.StaffID_2, arg.PasswordHash)
	var staff_id int32
	err := row.Scan(&staff_id)
	return staff_id, err
}
